name: Manage Repository Settings

on:
  pull_request:
    branches:
      - '*'  # Trigger on PRs to any branch
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  set-branch-protection:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Only run for pull requests

    steps:
      - name: Set Branch Protection Rules
        run: |
          BRANCH_NAME="main"
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/branches/$BRANCH_NAME/protection" \
            -d '{
              "required_status_checks": {
                "strict": true,
                "contexts": []
              },
              "enforce_admins": true,
              "required_pull_request_reviews": {
                "required_approving_review_count": 2,
                "dismiss_stale_reviews": true,
                "dismissal_restrictions": {
                  "users": ["RaviUsername", "ManasaUsername"]
                }
              },
              "restrictions": null
            }'

  update-codeowners:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Only run for pull requests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh

      - name: Update CODEOWNERS
        run: |
          if [ -f CODEOWNERS ]; then
            echo "Updating existing CODEOWNERS file."
          else
            echo "Creating CODEOWNERS file."
          fi
          echo '* @pathania25 @ravicharan-nettyam @manasa-telus' > CODEOWNERS
          
          # Configure Git
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          # Fetch and merge the latest changes
          git fetch origin main
          git merge origin/main --allow-unrelated-histories --no-edit || true  

          # Add changes and commit
          git add CODEOWNERS
          git commit -m "Update CODEOWNERS to include Monika, Ravi and Manasa" || echo "No changes to commit"
          
          # Pull the latest changes to avoid non-fast-forward errors
          git pull --rebase origin main

          # Push changes to the main branch
          git push origin HEAD:main || echo "Push failed, please check for conflicts"

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only run this job for pushes to main

    steps:
      - name: Deploy to Production
        run: |
          echo "Deploying to production..."