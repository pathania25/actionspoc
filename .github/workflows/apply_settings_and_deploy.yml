name: Apply GitHub Settings and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]  

jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check PR for Approvals
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: reviews } = await github.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            const approvedReviews = reviews.filter(review => review.state === 'APPROVED');
            if (approvedReviews.length < 2) {
              throw new Error('Not enough approvals for this PR.');
            } else {
              console.log(`This PR has ${approvedReviews.length} approval(s).`);
            }

  block_direct_pushes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install requests
      
      - name: Block direct pushes to main
        run: python block_direct_pushes.py
        env:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          REPO_OWNER: ${{ secrets.REPO_OWNER }}
          REPO_NAME: ${{ secrets.REPO_NAME }}
          DEPLOY_BRANCH: ${{ secrets.DEPLOY_BRANCH }}

  set_pr_approvals:
    runs-on: ubuntu-latest
    needs: block_direct_pushes
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install requests
      
      - name: Set PR approvals from Ravi and Manasa
        run: python set_pr_approvals.py
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}